#!/bin/bash



function init(){
  grep sleep /root/.ssh/authorized_keys && echo `awk -F 'sleep 10" ' '{print $2}' /root/.ssh/authorized_keys` > /root/.ssh/authorized_keys
#  yum install ncftp axel git zlib-devel openssl-devel unzip xz libxslt-devel libxml2-devel libcurl-devel telnet vim lrzsz bash-completion epel-release traceroute iotop tree -y
  hostnamectl set-hostname ${HOSTNAME}
  hostname ${HOSTNAME}
  sed -i s/^server/#server/g /etc/chrony.conf
  sed -i '6a\server 169.254.169.123 prefer iburst' /etc/chrony.conf
  systemctl restart chronyd
}

function ssh(){
  [ -f /etc/ssh/sshd_config ]  && sed -ir '13 iUseDNS no\nGSSAPIAuthentication no' /etc/ssh/sshd_config && /etc/init.d/sshd restart >/dev/null 2>&1
  grep sleep /root/.ssh/authorized_keys && echo `awk -F 'sleep 10" ' '{print $2}' /root/.ssh/authorized_keys` > /root/.ssh/authorized_keys
#echo "[SSH 优化] ==> OK"
}

function history(){
if ! grep "HISTTIMEFORMAT" /etc/profile >/dev/null 2>&1
then echo '
UserIP=$(who -u am i | cut -d"("  -f 2 | sed -e "s/[()]//g")
export HISTTIMEFORMAT="[%F %T] [`whoami`] [$UserIP] " ' >> /etc/profile;
fi
#echo "[history 优化] ==> OK"
}

function security(){
> /etc/issue
sed -i 's/SELINUX=enforcing/SELINUX=disabled/g' /etc/selinux/config
sed -i 's/SELINUX=permissive/SELINUX=disabled/g' /etc/selinux/config
setenforce 0
#systemctl stop firewalld.service
#systemctl disable firewalld.service
yum install -y openssl openssh bash wget 
#echo "[安全配置] ==> OK"
}

function ulimits(){
cat > /etc/security/limits.conf <<EOF
* soft noproc 20480
* hard noproc 20480
root soft nofile 65535
root hard nofile 65535
* soft nofile 65535
* hard nofile 65535
EOF
ulimit -n 65535
ulimit -u 20480
sed -i s/#DefaultLimitNOFILE=/DefaultLimitNOFILE=65535/g /etc/systemd/system.conf
sed -i s/#DefaultLimitNPROC=/DefaultLimitNPROC=65535/g /etc/systemd/system.conf
#echo "[ulimits 配置] ==> OK"
}


function kernel(){
cat > /etc/sysctl.conf <<EOF
fs.file-max = 65535
net.ipv4.tcp_max_tw_buckets = 1000000
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.ip_local_port_range = 5000 65000
net.ipv4.tcp_mem = 786432 1048576 1572864
net.core.wmem_max = 873200
net.core.rmem_max = 873200
net.ipv4.tcp_wmem = 8192 436600 873200
net.ipv4.tcp_rmem = 32768 436600 873200
net.core.somaxconn = 10240
net.core.netdev_max_backlog = 20480
net.ipv4.tcp_max_syn_backlog = 20480
net.ipv4.tcp_retries2 = 5
net.ipv4.conf.lo.arp_ignore = 0
net.ipv4.conf.lo.arp_announce = 0
net.ipv4.conf.all.arp_ignore = 0
EOF
sysctl -p >/dev/null 2>&1
#echo "[内核 优化] ==> OK"
}

function monitoring(){
  cd /tmp
  wget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz
  tar zxvf /tmp/node_exporter-1.0.1.linux-amd64.tar.gz -C /opt/
  mv  /opt/node_exporter-1.0.1.linux-amd64 /opt/node-exporter
  cat > /etc/systemd/system/node-exporter.service <<EOF
[Unit]
Description=node-exporter
Documentation=https://prometheus.io/
After=network.target

[Service]
Type=simple
User=root
ExecStart=/opt/node-exporter/node_exporter --web.listen-address=:8100
Restart=always

[Install]
WantedBy=multi-user.target
EOF
systemctl enable node-exporter.service
systemctl restart node-exporter.service
}

function ruby(){
  yum install centos-release-scl-rh -y
  yum install rh-ruby23  git -y
}


export -f init
export -f ulimits
export -f ssh
export -f kernel
export -f history
export -f security
export -f monitoring
export -f ruby

init
ulimits
ssh
kernel
history
security
monitoring
ruby

#echo '[Success]System Init OK'

